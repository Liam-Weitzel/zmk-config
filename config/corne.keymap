/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "mouse.dtsi"

/ {
    behaviors {
        hold_tap_mo_kp: hold_tap_mo_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_MO_KP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
        };

        hold_tap_kp_kp: hold_tap_kp_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_KP_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };

        hold_tap_tog_kr: hold_tap_tog_kr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_TOG_KR";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            bindings = <&tog>, <&key_repeat>;

            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };

        hold_tap_kp_kr: hold_tap_kp_kr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_KP_KR";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            bindings = <&kp>, <&key_repeat>;

            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };

        sticky_key: sticky_key {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY";
            bindings = <&kp>;
            #binding-cells = <1>;
            quick-release;
            release-after-ms = <200>;
        };

        hold_tap_sk_kp: hold_tap_sk_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_SK_KP";
            bindings = <&sticky_key>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            flavor = "balanced";
            require-prior-idle-ms = <160>;
        };

        hold_tap_kp_sk: hold_tap_kp_sk {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_KP_SK";
            bindings = <&kp>, <&sticky_key>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };

        hold_tap_tog_kp: hold_tap_tog_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_TOG_KP";
            bindings = <&tog>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            quick-tap-ms = <180>;
        };

        backspace_del_mod_layer_1: backspace_del_mod_layer_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL_MOD_LAYER_1";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        backspace_del_mod_layer_3: backspace_del_mod_layer_3 {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL_MOD_LAYER_3";
            bindings =
                <&hold_tap_tog_kp 6 BACKSPACE>,
                <&hold_tap_tog_kp 6 DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        backspace_del_mod_layer_5: backspace_del_mod_layer_5 {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL_MOD_LAYER_5";
            bindings =
                <&hold_tap_tog_kp 12 BACKSPACE>,
                <&hold_tap_tog_kp 12 DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        backspace_del_mod_layer_2: backspace_del_mod_layer_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL_MOD_LAYER_2";
            bindings =
                <&hold_tap_tog_kp 3 BACKSPACE>,
                <&hold_tap_tog_kp 3 DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        backspace_del_mod_layer_4: backspace_del_mod_layer_4 {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL_MOD_LAYER_4";
            bindings =
                <&hold_tap_tog_kp 9 BACKSPACE>,
                <&hold_tap_tog_kp 9 DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        backspace_del_mod_layer_6: backspace_del_mod_layer_6 {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL_MOD_LAYER_6";
            bindings =
                <&hold_tap_tog_kp 15 BACKSPACE>,
                <&hold_tap_tog_kp 15 DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        hold_tap_no_kp: hold_tap_no_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_NO_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };

        capsword: capsword {
            compatible = "zmk,behavior-caps-word";
            label = "CAPSWORD";
            #binding-cells = <0>;
            continue-list = <A B D C E F G H I J K L M N O P Q R S T U V W X Y Z>;
        };

        caps_capsword_mod_morph: caps_capsword_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "CAPS_CAPSWORD_MOD_MORPH";
            bindings = <&kp CAPSLOCK>, <&capsword>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        left_mleft: left_mleft {
            compatible = "zmk,behavior-mod-morph";
            label = "LEFT_MLEFT";
            bindings = <&kp LEFT>, <U_MS_L>;

            #binding-cells = <0>;
            mods = <(MOD_RALT)>;
        };

        right_mright: right_mright {
            compatible = "zmk,behavior-mod-morph";
            label = "RIGHT_MRIGHT";
            bindings = <&kp RIGHT>, <U_MS_R>;

            #binding-cells = <0>;
            mods = <(MOD_RALT)>;
        };

        up_mup: up_mup {
            compatible = "zmk,behavior-mod-morph";
            label = "UP_MUP";
            bindings = <&kp UP>, <U_MS_U>;

            #binding-cells = <0>;
            mods = <(MOD_RALT)>;
        };

        down_mdown: down_mdown {
            compatible = "zmk,behavior-mod-morph";
            label = "DOWN_MDOWN";
            bindings = <&kp DOWN_ARROW>, <U_MS_D>;

            #binding-cells = <0>;
            mods = <(MOD_RALT)>;
        };

        hold_tap_kp_kp_homerow_left: hold_tap_kp_kp_homerow_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_KP_KP_HOMEROW_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };

        mod_morph_tab_1: mod_morph_tab_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "MOD_MORPH_TAB_1";
            bindings = <&kp TAB>, <&kp NUMBER_1>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
            keep-mods = <(MOD_LALT)>;
        };

        mod_morph_a_3: mod_morph_a_3 {
            compatible = "zmk,behavior-mod-morph";
            label = "MOD_MORPH_A_3";
            bindings = <&kp A>, <&kp NUMBER_3>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
            keep-mods = <(MOD_LALT)>;
        };

        mod_morph_d_4: mod_morph_d_4 {
            compatible = "zmk,behavior-mod-morph";
            label = "MOD_MORPH_D_4";
            bindings = <&kp D>, <&kp NUMBER_4>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
            keep-mods = <(MOD_LALT)>;
        };

        mod_morph_g_2: mod_morph_g_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "MOD_MORPH_G_2";
            bindings = <&kp G>, <&kp NUMBER_2>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
            keep-mods = <(MOD_LALT)>;
        };

        mod_morph_r_5: mod_morph_r_5 {
            compatible = "zmk,behavior-mod-morph";
            label = "MOD_MORPH_R_5";
            bindings = <&kp R>, <&kp N5>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
            keep-mods = <(MOD_LALT)>;
        };

        mod_morph_f_6: mod_morph_f_6 {
            compatible = "zmk,behavior-mod-morph";
            label = "MOD_MORPH_F_6";
            bindings = <&kp F>, <&kp NUMBER_6>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
            keep-mods = <(MOD_LALT)>;
        };

        mod_morph_plus_equals: mod_morph_plus_equals {
            compatible = "zmk,behavior-mod-morph";
            label = "MOD_MORPH_PLUS_EQUALS";
            bindings = <&kp PLUS>, <&kp EQUAL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hold_tap_kp_kp_homerow_right: hold_tap_kp_kp_homerow_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_KP_KP_HOMEROW_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };

        backspace_del_mod_layer_24: backspace_del_mod_layer_24 {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL_MOD_LAYER_24";
            bindings =
                <&hold_tap_tog_kp 1 BACKSPACE>,
                <&hold_tap_tog_kp 1 DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        hold_tap_kp_kp_noidle: hold_tap_kp_kp_noidle {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_KP_KP_NOIDLE";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            quick-tap-ms = <180>;
        };

        tog_1_mod_morph: tog_1_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "TOG_1_MOD_MORPH";
            bindings = <&kp C>, <&tog 1>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        tog_17_mod_morph: tog_17_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "TOG_17_MOD_MORPH";
            bindings = <&kp Q>, <&tog 17>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        tog_18_mod_morph: tog_18_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "TOG_18_MOD_MORPH";
            bindings = <&kp W>, <&tog 18>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        tog_19_mod_morph: tog_19_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "TOG_19_MOD_MORPH";
            bindings = <&kp F>, <&tog 19>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        tog_20_mod_morph: tog_20_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "TOG_20_MOD_MORPH";
            bindings = <&kp A>, <&tog 20>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        tog_21_mod_morph: tog_21_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "TOG_21_MOD_MORPH";
            bindings = <&kp R>, <&tog 21>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        tog_22_mod_morph: tog_22_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "TOG_22_MOD_MORPH";
            bindings = <&kp S>, <&tog 22>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        tog_23_mod_morph: tog_23_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "TOG_23_MOD_MORPH";
            bindings = <&kp Z>, <&tog 23>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        tog_24_mod_morph: tog_24_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "TOG_24_MOD_MORPH";
            bindings = <&kp X>, <&tog 24>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        mo_16_mod_morph: mo_16_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "MO_16_MOD_MORPH";
            bindings = <&kp G>, <&mo 16>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        tap_preferred_hold_tap: tap_preferred_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED_HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        hold_tap_alt_a: hold_tap_alt_a {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_ALT_A";
            bindings = <&kp>, <&alt_a>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };

        hold_tap_gui_r: hold_tap_gui_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_GUI_R";
            bindings = <&kp>, <&gui_r>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };

        hold_tap_ctrl_s: hold_tap_ctrl_s {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_CTRL_S";
            bindings = <&kp>, <&ctrl_s>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };

        hold_tap_ctrl_space: hold_tap_ctrl_space {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_CTRL_SPACE";
            bindings = <&kp>, <&ctrl_space>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };

        tap_preferred_hold_tap_kp_kr: tap_preferred_hold_tap_kp_kr {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED_HOLD_TAP_KP_KR";
            bindings = <&kp>, <&key_repeat>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        hold_tap_gui_kr: hold_tap_gui_kr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_GUI_KR";
            bindings = <&kp>, <&gui_kr>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };

        hold_tap_alt_enter: hold_tap_alt_enter {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_ALT_ENTER";
            bindings = <&kp>, <&alt_enter>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };

        hold_tap_ctrl_e: hold_tap_ctrl_e {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_CTRL_E";
            bindings = <&kp>, <&ctrl_e>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };

        hold_tap_gui_i: hold_tap_gui_i {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_GUI_I";
            bindings = <&kp>, <&gui_i>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };

        hold_tap_alt_o: hold_tap_alt_o {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_ALT_O";
            bindings = <&kp>, <&alt_o>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };

        hold_tap_gui_s: hold_tap_gui_s {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_GUI_S";
            bindings = <&kp>, <&gui_s>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };

        hold_tap_ctrl_d: hold_tap_ctrl_d {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_CTRL_D";
            bindings = <&kp>, <&ctrl_d>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };

        hold_tap_ctrl_k: hold_tap_ctrl_k {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_CTRL_K";
            bindings = <&kp>, <&ctrl_k>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };

        hold_tap_gui_l: hold_tap_gui_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_GUI_L";
            bindings = <&kp>, <&gui_l>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };

        hold_tap_alt_semi: hold_tap_alt_semi {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_ALT_SEMI";
            bindings = <&kp>, <&alt_semi>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <160>;
        };
    };

    combos {
        compatible = "zmk,combos";

        end {
            bindings = <&kp END>;
            key-positions = <27 28 38>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <27 28 37>;
        };

        esc-left {
            bindings = <&kp ESCAPE>;
            key-positions = <16 15 37>;
        };

        esc-right {
            bindings = <&kp ESCAPE>;
            key-positions = <20 19 40>;
        };

        home-arrow {
            bindings = <&kp HOME>;
            key-positions = <27 37>;
            layers = <2 3 4>;
        };

        end-arrow {
            bindings = <&kp END>;
            key-positions = <27 38>;
            layers = <2 3 4>;
        };

        end-right {
            bindings = <&kp END>;
            key-positions = <31 32 40>;
        };

        home-right {
            bindings = <&kp HOME>;
            key-positions = <39 31 32>;
        };

        esc-left-arrow {
            bindings = <&kp ESCAPE>;
            key-positions = <15 37>;
            layers = <3 2 4>;
        };

        esc-right-symbol-function {
            bindings = <&kp ESCAPE>;
            key-positions = <20 40>;
            layers = <10 8 9 5 6 7>;
        };

        end-right-symbol-function {
            bindings = <&kp END>;
            key-positions = <32 40>;
            layers = <8 9 10 5 6 7>;
        };

        home-right-symbol-function {
            bindings = <&kp HOME>;
            key-positions = <39 32>;
            layers = <8 9 10 5 6 7>;
        };
    };

    macros {
        alt_a: alt_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&tap_preferred_hold_tap RIGHT_ALT A>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&tap_preferred_hold_tap RIGHT_ALT A &kp LEFT_ALT &kp RIGHT_ALT &kp LEFT_GUI &kp RGUI &kp LCTRL &kp RCTRL>;

            label = "ALT_A";
        };

        gui_r: rgui_r {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&tap_preferred_hold_tap RIGHT_GUI R>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&tap_preferred_hold_tap RIGHT_GUI R &kp LEFT_ALT &kp RIGHT_ALT &kp LEFT_GUI &kp RGUI &kp LCTRL &kp RCTRL>;

            label = "RGUI_R";
        };

        ctrl_s: ctrl_s {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&tap_preferred_hold_tap RCTRL S>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&tap_preferred_hold_tap RCTRL S &kp LEFT_ALT &kp RIGHT_ALT &kp LEFT_GUI &kp RGUI &kp LCTRL &kp RCTRL>;

            label = "CTRL_S";
        };

        ctrl_space: ctrl_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&tap_preferred_hold_tap LCTRL SPACE>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&tap_preferred_hold_tap LCTRL SPACE &kp LEFT_ALT &kp RIGHT_ALT &kp LEFT_GUI &kp RGUI &kp LCTRL &kp RCTRL>;

            label = "CTRL_SPACE";
        };

        gui_kr: gui_kr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&tap_preferred_hold_tap_kp_kr LEFT_GUI 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&tap_preferred_hold_tap_kp_kr LEFT_GUI 0 &kp LEFT_ALT &kp RIGHT_ALT &kp LEFT_GUI &kp RGUI &kp LCTRL &kp RCTRL>;

            label = "GUI_KR";
        };

        alt_enter: alt_enter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&tap_preferred_hold_tap LEFT_ALT ENTER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&tap_preferred_hold_tap LEFT_ALT ENTER &kp LEFT_ALT &kp RIGHT_ALT &kp LEFT_GUI &kp RGUI &kp LCTRL &kp RCTRL>;

            label = "ALT_ENTER";
        };

        ctrl_e: ctrl_e {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&tap_preferred_hold_tap RCTRL E>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&tap_preferred_hold_tap RCTRL E &kp LEFT_ALT &kp RIGHT_ALT &kp LEFT_GUI &kp RGUI &kp LCTRL &kp RCTRL>;

            label = "CTRL_E";
        };

        gui_i: gui_i {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&tap_preferred_hold_tap RIGHT_GUI I>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&tap_preferred_hold_tap RIGHT_GUI I &kp LEFT_ALT &kp RIGHT_ALT &kp LEFT_GUI &kp RGUI &kp LCTRL &kp RCTRL>;

            label = "GUI_I";
        };

        alt_o: alt_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&tap_preferred_hold_tap RIGHT_ALT O>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&tap_preferred_hold_tap RIGHT_ALT O &kp LEFT_ALT &kp RIGHT_ALT &kp LEFT_GUI &kp RGUI &kp LCTRL &kp RCTRL>;

            label = "ALT_O";
        };

        gui_s: gui_s {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&tap_preferred_hold_tap RIGHT_GUI S>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&tap_preferred_hold_tap RIGHT_GUI S &kp LEFT_ALT &kp RIGHT_ALT &kp LEFT_GUI &kp RGUI &kp LCTRL &kp RCTRL>;

            label = "GUI_S";
        };

        ctrl_d: ctrl_d {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&tap_preferred_hold_tap RCTRL D>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&tap_preferred_hold_tap RCTRL D &kp LEFT_ALT &kp RIGHT_ALT &kp LEFT_GUI &kp RGUI &kp LCTRL &kp RCTRL>;

            label = "CTRL_D";
        };

        ctrl_k: ctrl_k {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&tap_preferred_hold_tap RCTRL K>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&tap_preferred_hold_tap RCTRL K &kp LEFT_ALT &kp RIGHT_ALT &kp LEFT_GUI &kp RGUI &kp LCTRL &kp RCTRL>;

            label = "CTRL_K";
        };

        gui_l: gui_l {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&tap_preferred_hold_tap RIGHT_GUI L>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&tap_preferred_hold_tap RIGHT_GUI L &kp LEFT_ALT &kp RIGHT_ALT &kp LEFT_GUI &kp RGUI &kp LCTRL &kp RCTRL>;

            label = "GUI_L";
        };

        alt_semi: alt_semi {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&tap_preferred_hold_tap RIGHT_ALT SEMICOLON>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&tap_preferred_hold_tap RIGHT_ALT SEMICOLON &kp LEFT_ALT &kp RIGHT_ALT &kp LEFT_GUI &kp RGUI &kp LCTRL &kp RCTRL>;

            label = "ALT_SEMI";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q                        &kp W                        &kp F                                &kp P                         &kp B                                    &kp J                        &kp L                       &kp U                           &kp Y                        &kp SEMICOLON                &none
&none  &hold_tap_alt_a RIGHT_ALT 0  &hold_tap_gui_r RIGHT_GUI 0  &hold_tap_ctrl_s RCTRL 0             &hold_tap_mo_kp 4 T           &kp G                                    &kp M                        &hold_tap_mo_kp 10 N        &hold_tap_ctrl_e RCTRL 0        &hold_tap_gui_i RIGHT_GUI 0  &hold_tap_alt_o RIGHT_ALT 0  &none
&none  &kp Z                        &kp X                        &kp C                                &kp D                         &kp V                                    &kp K                        &hold_tap_mo_kp 7 H         &kp COMMA                       &kp DOT                      &kp APOS                     &none
                                                                 &hold_tap_kp_kp_noidle LEFT_ALT TAB  &hold_tap_ctrl_space LCTRL 0  &hold_tap_kp_sk LEFT_SHIFT LEFT_SHIFT    &hold_tap_gui_kr LEFT_GUI 0  &backspace_del_mod_layer_1  &hold_tap_alt_enter LEFT_ALT 0
            >;
        };

        layer_24 {
            bindings = <
&none  &kp Q                        &kp W                        &kp E                                &kp R                         &kp T                                    &kp Y                        &kp U                        &kp I                           &kp O                        &kp P                           &none
&none  &hold_tap_alt_a RIGHT_ALT A  &hold_tap_gui_s RIGHT_GUI 0  &hold_tap_ctrl_d RCTRL 0             &hold_tap_mo_kp 4 F           &kp G                                    &kp H                        &hold_tap_mo_kp 10 J         &hold_tap_ctrl_k RCTRL 0        &hold_tap_gui_l RIGHT_GUI 0  &hold_tap_alt_semi RIGHT_ALT 0  &none
&none  &kp Z                        &kp X                        &kp C                                &kp V                         &kp B                                    &kp N                        &hold_tap_mo_kp 7 M          &kp COMMA                       &kp DOT                      &kp APOS                        &none
                                                                 &hold_tap_kp_kp_noidle LEFT_ALT TAB  &hold_tap_ctrl_space LCTRL 0  &hold_tap_kp_sk LEFT_SHIFT LEFT_SHIFT    &hold_tap_gui_kr LEFT_GUI 0  &backspace_del_mod_layer_24  &hold_tap_alt_enter LEFT_ALT 0
            >;
        };

        layer_1 {
            bindings = <
&none  &tog_17_mod_morph  &tog_18_mod_morph  &tog_19_mod_morph                    &kp P                         &kp B                            &kp PG_UP                &mkp LCLK                   &up_mup                          &mkp RCLK      &caps_capsword_mod_morph  &none
&none  &tog_20_mod_morph  &tog_21_mod_morph  &tog_22_mod_morph                    &kp T                         &mo_16_mod_morph                 &kp PAGE_DOWN            &left_mleft                 &down_mdown                      &right_mright  &none                     &none
&none  &tog_23_mod_morph  &tog_24_mod_morph  &tog_1_mod_morph                     &kp D                         &kp V                            &none                    &none                       &none                            &none          &kp PRINTSCREEN           &none
                                             &hold_tap_kp_kp_noidle LEFT_ALT TAB  &hold_tap_ctrl_space LCTRL 0  &hold_tap_kp_sk LSHIFT LSHIFT    &hold_tap_gui_kr LGUI 0  &backspace_del_mod_layer_2  &hold_tap_alt_enter RIGHT_ALT 0
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&none  &none  &kp F7  &kp F8                               &kp F9                        &mkp LCLK                                &kp F20                      &kp F21                     &kp F22                         &kp F23  &kp F24  &none
&none  &none  &kp F4  &kp F5                               &kp F6                        &mkp RCLK                                &kp F15                      &kp F16                     &kp F17                         &kp F18  &kp F19  &none
&none  &none  &kp F1  &kp F2                               &kp F3                        &mkp MCLK                                &kp F10                      &kp F11                     &kp F12                         &kp F13  &kp F14  &none
                      &hold_tap_kp_kp_noidle LEFT_ALT TAB  &hold_tap_ctrl_space LCTRL 0  &hold_tap_kp_sk LEFT_SHIFT LEFT_SHIFT    &hold_tap_gui_kr LEFT_GUI 0  &backspace_del_mod_layer_3  &hold_tap_alt_enter LEFT_ALT 0
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
&none  &kp BACKSLASH  &kp N7        &kp N8                               &kp N9                        &mkp LCLK                                &none                        &none                       &kp LEFT_BRACKET                &kp RIGHT_BRACKET  &kp SEMICOLON  &none
&none  &kp N0         &kp NUMBER_4  &kp N5                               &kp NUMBER_6                  &mkp RCLK                                &none                        &none                       &mod_morph_plus_equals          &kp MINUS          &kp GRAVE      &none
&none  &kp SLASH      &kp NUMBER_1  &kp NUMBER_2                         &kp NUMBER_3                  &mkp MCLK                                &none                        &none                       &kp COMMA                       &kp PERIOD         &kp SQT        &none
                                    &hold_tap_kp_kp_noidle LEFT_ALT TAB  &hold_tap_ctrl_space LCTRL 0  &hold_tap_kp_sk LEFT_SHIFT LEFT_SHIFT    &hold_tap_gui_kr LEFT_GUI 0  &backspace_del_mod_layer_4  &hold_tap_alt_enter LEFT_ALT 0
            >;
        };

        layer_8 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_9 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_10 {
            bindings = <
&none  &kp DOT  &kp DOT  &kp DOT                              &kp DOT                       &kp DOT                                  &kp DOT                      &kp DOT                     &kp DOT                         &kp DOT  &kp DOT  &none
&none  &kp DOT  &kp DOT  &kp DOT                              &kp DOT                       &kp DOT                                  &kp DOT                      &kp DOT                     &kp DOT                         &kp DOT  &kp DOT  &none
&none  &kp DOT  &kp DOT  &kp DOT                              &kp DOT                       &kp DOT                                  &kp DOT                      &kp DOT                     &kp DOT                         &kp DOT  &kp DOT  &none
                         &hold_tap_kp_kp_noidle LEFT_ALT TAB  &hold_tap_ctrl_space LCTRL 0  &hold_tap_kp_sk LEFT_SHIFT LEFT_SHIFT    &hold_tap_gui_kr LEFT_GUI 0  &backspace_del_mod_layer_5  &hold_tap_alt_enter LEFT_ALT 0
            >;
        };

        layer_11 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_12 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_13 {
            bindings = <
&none  &kp C_BRIGHTNESS_INC   &kp C_VOLUME_UP    &kp C_NEXT                           &none                         &none                                    &none                        &none                       &none                           &none         &none         &none
&none  &kp C_BRIGHTNESS_DEC   &kp C_VOLUME_DOWN  &kp C_PREVIOUS                       &none                         &none                                    &bt BT_SEL 0                 &bt BT_SEL 1                &bt BT_SEL 2                    &bt BT_SEL 3  &bt BT_SEL 4  &none
&none  &kp C_BRIGHTNESS_AUTO  &kp C_MUTE         &kp C_PLAY_PAUSE                     &none                         &none                                    &none                        &none                       &none                           &none         &bt BT_CLR    &none
                                                 &hold_tap_kp_kp_noidle LEFT_ALT TAB  &hold_tap_ctrl_space LCTRL 0  &hold_tap_kp_sk LEFT_SHIFT LEFT_SHIFT    &hold_tap_gui_kr LEFT_GUI 0  &backspace_del_mod_layer_6  &hold_tap_alt_enter LEFT_ALT 0
            >;
        };

        layer_14 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_15 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_16 {
            bindings = <
&none  &mod_morph_tab_1  &mod_morph_g_2  &kp W         &mod_morph_r_5  &mod_morph_f_6    &none  &none    &none  &none  &none  &none
&none  &kp LEFT_SHIFT    &mod_morph_a_3  &kp S         &mod_morph_d_4  &kp E             &none  &none    &none  &none  &none  &none
&none  &kp M             &kp B           &kp X         &kp H           &kp V             &none  &none    &none  &none  &none  &none
                                         &kp LEFT_ALT  &kp SPACE       &kp LCTRL         &none  &tog 17  &none
            >;
        };

        layer_17 {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none    &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none    &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none    &none  &none  &none  &none
                     &none  &none  &none    &none  &tog 18  &none
            >;
        };

        layer_18 {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none    &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none    &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none    &none  &none  &none  &none
                     &none  &none  &none    &none  &tog 19  &none
            >;
        };

        layer_19 {
            bindings = <
&none  &kp NUMBER_2  &kp C         &kp W  &kp E           &kp R           &none  &none    &none  &none  &none  &none
&none  &kp LCTRL     &kp A         &kp S  &kp D           &kp NUMBER_1    &none  &none    &none  &none  &none  &none
&none  &kp F         &kp NUMBER_3  &kp X  &kp NUMBER_4    &kp M           &none  &none    &none  &none  &none  &none
                                   &kp Q  &kp LEFT_SHIFT  &kp SPACE       &none  &tog 20  &none
            >;
        };

        layer_20 {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none    &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none    &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none    &none  &none  &none  &none
                     &none  &none  &none    &none  &tog 21  &none
            >;
        };

        layer_21 {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none    &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none    &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none    &none  &none  &none  &none
                     &none  &none  &none    &none  &tog 22  &none
            >;
        };

        layer_22 {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none    &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none    &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none    &none  &none  &none  &none
                     &none  &none  &none    &none  &tog 23  &none
            >;
        };

        layer_23 {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none    &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none    &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none    &none  &none  &none  &none
                     &none  &none  &none    &none  &tog 24  &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        layer_2_lock {
            if-layers = <3>;
            then-layer = <2>;
        };

        layer_2_temp {
            if-layers = <4>;
            then-layer = <2>;
        };

        layer_3_lock {
            if-layers = <6>;
            then-layer = <5>;
        };

        layer_3_temp {
            if-layers = <7>;
            then-layer = <5>;
        };

        layer_4_lock {
            if-layers = <9>;
            then-layer = <8>;
        };

        layer_4_temp {
            if-layers = <10>;
            then-layer = <8>;
        };

        layer_5_lock {
            if-layers = <12>;
            then-layer = <11>;
        };

        layer_5_temp {
            if-layers = <13>;
            then-layer = <11>;
        };

        layer_6_lock {
            if-layers = <15>;
            then-layer = <14>;
        };

        layer_6_temp {
            if-layers = <16>;
            then-layer = <14>;
        };
    };
};
